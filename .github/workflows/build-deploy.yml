name: Build

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed
    branches:
      - main
      - dev

env:
  SERVICE_NAME: rpkm67-frontend
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  IMAGE_TAG_DEV: <WILL_BE_SET>
  IMAGE_TAG_PROD: <WILL_BE_SET>

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    outputs:
      IMAGE_TAG_DEV: ${{ steps.tag_action.outputs.new_tag }}-dev
      IMAGE_TAG_PROD: ${{ steps.tag_action.outputs.new_tag }}-prod

    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          RELEASE_BRANCHES: dev
          DEFAULT_BUMP: patch
        id: tag_action

      - name: Set IMAGE_TAG
        run:
          echo "IMAGE_TAG_DEV=${{ steps.tag_action.outputs.new_tag }}-dev" >> $GITHUB_ENV
          echo "IMAGE_TAG_PROD=${{ steps.tag_action.outputs.new_tag }}-prod" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and Push Docker Image (DEV)
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_DEV }},${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max
          build-args: |
            API_BASE_URL=${{ vars.DEV_API_BASE_URL }}
            FIRST_DATE_DATE=${{ vars.DEV_FIRST_DATE_DATE }}
            RUP_PEUN_DATE=${{ vars.DEV_RUP_PEUN_DATE }}
            BASE_DOMAIN_IMAGES=${{ vars.DEV_BASE_DOMAIN_IMAGES }}

      - name: Build and Push Docker Image (PROD)
        uses: docker/build-push-action@v3
        if: github.ref == 'refs/heads/main'
        with:
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_PROD }},${{ env.IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max
          build-args: |
            API_BASE_URL=${{ vars.PROD_API_BASE_URL }}
            FIRST_DATE_DATE=${{ vars.PROD_FIRST_DATE_DATE }}
            RUP_PEUN_DATE=${{ vars.PROD_RUP_PEUN_DATE }}
            BASE_DOMAIN_IMAGES=${{ vars.PROD_BASE_DOMAIN_IMAGES }}

  cd:
    name: Continuous Deployment
    needs: build
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG_DEV: ${{ needs.build.outputs.IMAGE_TAG_DEV }}
      IMAGE_TAG_PROD: ${{ needs.build.outputs.IMAGE_TAG_PROD }}

    steps:
      - name: Checkout DevOps repository
        uses: actions/checkout@v4
        with:
          repository: isd-sgcu/rpkm67-devops
          token: ${{ secrets.RPKM67_DEVOPS_TOKEN }}

      - name: Update image tag in dev
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.[0].value = "${{ env.IMAGE_NAME }}:" + strenv(IMAGE_TAG_DEV)' isd/${{ env.SERVICE_NAME }}/deployment.yaml

      - name: Update image tag in prod
        uses: mikefarah/yq@master
        if: github.ref == 'refs/heads/main'
        with:
          cmd: yq -i '.[0].value = "${{ env.IMAGE_NAME }}:" + strenv(IMAGE_TAG_PROD)' prod/${{ env.SERVICE_NAME }}/deployment.yaml

      - name: Commit & Push changes
        uses: actions-js/push@v1.4
        with:
          repository: isd-sgcu/rpkm67-devops
          github_token: ${{ secrets.RPKM67_DEVOPS_TOKEN }}
